x <- 1
print(x)
x
hello
msg <- "hello"
msg
#HELLO
x <- 1, 2
x <- 1:20
x
x <- 1:3
y <- 4:8
cbind(x,y)
x <- 1:5
cbing(x,y)
cbind(x,y)
x <- data.frame(foo = 1:4, bar = c(T,T,F,F), norf = ("a", "b", "c", "d'))
x <- data.frame(foo = 1:4, bar = c(T,T,F,F), norf = ("a", "b", "c", "d"))
x <- data.frame(foo = 1:4, bar = c(T,T,F,F), norf = ("a" "b" "c" "d"))
x <- data.frame(foo = 1:4, bar = c(T,T,F,F), norf = "a", "b", "c", "d"
)
x
x <- data.frame(foo = 1:4, bar = c(T,T,F,F), norf = "a", "b", "c", "d")
x
con <- url("https://class.coursera.org/rprog-034/lecture/127")
x <- readlines(con)
x <- readLines(con)
head(x)
x <- c("a", "b", "c", "d", "a")
x[1]
x[[1]]
x[1:5]
x[1:6]
x[x < "a"
x[x < "a"]
x[x < "a"]
x[x > "a"]
c <- x > a
c <- x > "a"
c
x <- list(a=list(10,12,14), b=c(3.14, 2.81))
x
x[[c(1,3)]]
x[[c(1,1)]]
x[[c(2,1)]]
x[[c(2,3)]]
x[[c(2,2)]]
x <- c(3,4,5,NA,11)
bad <- is.na(x)
bad
x[!bad]
library(datasets)
data("iris")
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm=TRUE)
tapply(mtcars$hp, mtcars$cyl, mean)
setwd("~/Desktop/Coursework/Spring 16/Collect Store and Ret Data/CSRD-Github/Week 4")
rm(list=ls())
library(XML)
xmlobj <- xmlTreeParse("http://www.cs.washington.edu/research/xmldatasets/data/auctions/ebay.xml")
r <- xmlRoot(xmlobj)
r
doc.list <- xmlToList(r)
doc.list
xmlName(r) #give name of node, PubmedArticleSet
xmlSize(r) #how many children in node, 19
xmlName(r[[1]]) #name of root's children
r[1]
r[1][1]
r[1][1][4]
r[1][1][1]
r[1][2][1]
r[1][2]
r[2]
r[2][1]
r[2][2]
r[2][1,1]
r[2]$listing
r[2]$listing$auction_info$num_bids
r[2]$listing$auction_info
r[2]$listing$auction_info
r[1]$listing$auction_info
xmlName(r)
xmlSize(r)
xmlobj
r[[1]]
r[[1]][[1]]
r[[1]][[4]]
r[[1]][[5]]
r[[1]][[5]][[5]]
r[[2]][[5]][[5]]
r[[3]][[5]][[5]]
r[[4]][[5]][[5]]
r[[5]][[5]][[5]]
for(i in 1:xmlSize(r)){
x <- r[[i]][[5]][[5]]
}
x
for(i in 1:xmlSize(r)){
x <- c()
x <- r[[i]][[5]][[5]]
}
x
for(i in 1:xmlSize(r)){
x <- c()
x[i] <- r[[i]][[5]][[5]]
}
xmlValue(r[[1]][[5]][[5]])
xmlTreeParse <- function(r){
count <-  0
for(i in 1:xmlSize(r)){
if(xmlValue(r[[i]][[5]][[5]]) > 5){
count <-  count + 1
}
}
count
}
xmlTreeParse(r)
xmlTreeParse <- function(r){
count <-  0
for(i in 1:xmlSize(r)){
if(xmlValue(r[[i]][[5]][[5]]) > 5){
count <<-  count + 1
}
}
count
}
xmlTreeParse(r)
xmlTreeParse <- function(r){
count <-  0
for(i in 1:xmlSize(r)){
if(as.integer(xmlValue(r[[i]][[5]][[5]])) > 5){
count <-  count + 1
}
}
count
}
xmlTreeParse(r)
xmlTreeParse <- function(r){
count <-  0
for(i in 1:xmlSize(r)){
if(as.integer(xmlValue(r[[i]][[5]][[5]])) > 5){
count <-  count + 1
}
}
paste(count,"auctions had more than 5 bids.")
}
xmlTreeParse(r)
xmlobj1 <- xmlTreeParse("http://www.barchartmarketdata.com/data-samples/getHistory15.xml")
xmlobj1 <- xmlTreeParse("http://www.barchartmarketdata.com/data-samples/getHistory15.xml")
rm(list=ls())
xmlobj1 <- xmlTreeParse("http://www.barchartmarketdata.com/data-samples/getHistory15.xml")
r1 <- xmlRoot(xmlobj)
r1 <- xmlRoot(xmlobj1)
xmlSize(r1)
r1[[1]]
r1[[2]]
r1[[2]][[1]]
r1[[2]][[7]]
highestClosingPrice <- function(r1){
for(i in 2:xmlSize(r1)){
maxClose <- which.max(as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose
}
highestClosingPrice(r1)
as.integer(xmlValue(r1[[2]][[7]]))
highestClosingPrice <- function(r1){
maxClose <- c()
for(i in 2:xmlSize(r1)){
maxClose[i] <- which.max(as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
maxClose <- c()
for(i in 2:xmlSize(r1)){
maxClose[i] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
maxClose <- c()
for(i in 2:xmlSize(r1)){
maxClose[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
Close <- c()
for(i in 2:xmlSize(r1)){
Close[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose <- which.max(maxClose)
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
Close <- c()
for(i in 2:xmlSize(r1)){
Close[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose <- which.max(Close)
}
highestClosingPrice <- function(r1){
Close <- c()
for(i in 2:xmlSize(r1)){
Close[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose <- which.max(Close)
Close[maxClose]
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
Close <- c()
for(i in 2:xmlSize(r1)){
Close[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose <- which.max(Close)
paste(Close[maxClose], "was the highest closing price for the security.")
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
close <- c()
for(i in 2:xmlSize(r1)){
close[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose <- which.max(close)
paste(Close[maxClose], "was the highest closing price for the security.")
}
highestClosingPrice(r1)
highestClosingPrice <- function(r1){
close <- c()
for(i in 2:xmlSize(r1)){
close[i-1] <- (as.integer(xmlValue(r1[[i]][[7]])))
}
maxClose <- which.max(close)
paste(close[maxClose], "was the highest closing price for the security.")
}
highestClosingPrice(r1)
totalVolume <- function(r1){
total <- 0
for(i in 2:xmlSize(r1)){
total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
}
paste(total, "was the total volume traded")
}
totalVolume(r1)
totalVolume <- function(r1){
total <- 0
avg <- c()
for(i in 2:xmlSize(r1)){
total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
avg[i-1] <- as.integer(xmlValue(r1[[i]][[8]]))
}
paste(total, "was the total volume traded")
mean(avg)
}
totalVolume(r1)
totalVolume <- function(r1){
total <- 0
avg <- c()
for(i in 2:xmlSize(r1)){
total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
avg[i-1] <- as.integer(xmlValue(r1[[i]][[8]]))
}
mean(avg)
}
totalVolume(r1)
otalVolume <- function(r1){
total <- 0
avg <- c()
for(i in 2:xmlSize(r1)){
total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
avg[i-1] <- as.integer(xmlValue(r1[[i]][[8]]))
}
avg
}
totalVolume(r1)
totalVolume <- function(r1){
total <- 0
avg <- c()
for(i in 2:xmlSize(r1)){
total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
avg[i-1] <- as.integer(xmlValue(r1[[i]][[8]]))
}
avg
}
totalVolume <- function(r1){
total <- 0
avg <- c()
for(i in 2:xmlSize(r1)){
#total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
avg[i-1] <- as.integer(xmlValue(r1[[i]][[8]]))
}
avg
}
totalVolume(r1)
totalVolume <- function(r1){
total <- 0
avg <- c()
for(i in 2:xmlSize(r1)){
#total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
avg[i-1] <- as.integer(xmlValue(r1[[i]][[8]]))
}
mean(avg)
}
totalVolume(r1)
totalVolume <- function(r1){
total <- 0
for(i in 2:xmlSize(r1)){
total <- total + (as.integer(xmlValue(r1[[i]][[8]])))
}
paste(total, "was the total volume traded")
}
totalVolume(r1)
